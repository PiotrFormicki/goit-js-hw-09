{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAYC,SAASC,cAAc,sBACnCC,EAAOF,SAASC,cAAc,oBAC9BE,EAAQH,SAASC,cAAc,qBAGrC,SAASG,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAUtC,OATgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUS,MAAAR,IAEpBM,EAAO,CAAEP,WAAUS,MAAAR,G,GAEpBA,E,IAXMN,SAASC,cAAc,aAsC/Bc,iBAAiB,UAtBI,SAAAC,GACxBA,EAAMC,iBAKN,IAHA,IAAMC,EAAiBC,OAAOpB,EAAUqB,OACpCC,EAAYF,OAAOjB,EAAKkB,OACxBE,EAAaH,OAAOhB,EAAMiB,OACrBG,EAAI,EAAGA,EAAIL,EAAgBK,IAElCnB,EADgBmB,EAAI,EACSD,GAC1BE,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUqB,EAAKD,EAALX,MACjBa,EAAA9B,GAAS+B,OAAOC,QACd,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANJ,EAAM,M,IAGjDK,OAAM,SAAAN,G,IAAGpB,EAAQoB,EAARpB,SAAU2B,EAAKP,EAALX,MAClBa,EAAA9B,GAAS+B,OAAOK,QACd,sBAAqCH,OAAfzB,EAAS,QAAYyB,OAANE,EAAM,M,IAGjDV,GAAcD,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst setAmount = document.querySelector('input[name=amount]');\nconst step = document.querySelector('input[name=step]');\nconst delay = document.querySelector('input[name=delay]');\nconst form = document.querySelector('form.form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay }); // Fulfill\n      } else {\n        reject({ position, delay }); // Reject\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nconst promisesGenerator = event => {\n  event.preventDefault();\n  let promisesValue;\n  const setAmountValue = Number(setAmount.value);\n  let stepValue = Number(step.value);\n  let delayValue = Number(delay.value);\n  for (let i = 0; i < setAmountValue; i++) {\n    promisesValue = i + 1;\n    createPromise(promisesValue, delayValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delayValue += stepValue;\n  }\n};\nform.addEventListener('submit', promisesGenerator);\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$setAmount","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$createPromise","position","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","addEventListener","event","preventDefault","setAmountValue","Number","value","stepValue","delayValue","i","then","param","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure"],"version":3,"file":"03-promises.fe699d3b.js.map"}