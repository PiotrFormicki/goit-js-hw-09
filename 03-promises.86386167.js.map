{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAYC,SAASC,cAAc,sBACnCC,EAAOF,SAASC,cAAc,oBAC9BE,EAAQH,SAASC,cAAc,qBAC/BG,EAAOJ,SAASC,cAAc,aAC9BI,EAAaL,SAASC,cAAc,uBAC1C,SAASK,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAUtC,OATgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,EAAUS,MAAAR,IAEpBM,EAAO,C,SAAEP,EAAUS,MAAAR,GAAQ,GAE5BA,EAAM,G,CAKb,MAAMS,EAAoBC,IAExB,IAAIC,EADJD,EAAME,iBAEN,MAAMC,EAAiBC,OAAOvB,EAAUwB,OACxC,IAAIC,EAAYF,OAAOpB,EAAKqB,OACxBE,EAAaH,OAAOnB,EAAMoB,OAC9B,IAAK,IAAIG,EAAI,EAAGA,EAAIL,EAAgBK,IAClCP,EAAgBO,EAAI,EACpBpB,EAAca,EAAeM,GAC1BE,MAAK,EAACpB,SAAEA,EAAUS,MAAAY,MACjBC,EAAAhC,GAASiC,OAAOC,QACd,uBAAqBxB,QAAiBqB,OAExCvB,EAAa2B,UAAS,CAAI,IAG3BC,OAAM,EAAC1B,SAAEA,EAAUS,MAAAkB,MAClBL,EAAAhC,GAASiC,OAAOK,QACd,sBAAoB5B,QAAe2B,MAAU,IAInDT,GAAcD,C,EAOlBpB,EAAKgC,iBAAiB,SAAUnB,GAQhCZ,EAAa+B,iBAAiB,SAPT,KAClBnB,IAAoBU,MAAK,KACxBtB,EAAa2B,UAAS,CAAK,GAC1B","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst setAmount = document.querySelector('input[name=amount]');\nconst step = document.querySelector('input[name=step]');\nconst delay = document.querySelector('input[name=delay]');\nconst form = document.querySelector('form.form');\nconst submitButton=document.querySelector(\"button[type=submit]\");\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay }); // Fulfill\n      } else {\n        reject({ position, delay }); // Reject\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nconst promisesGenerator = event => {\n  event.preventDefault();\n  let promisesValue;\n  const setAmountValue = Number(setAmount.value);\n  let stepValue = Number(step.value);\n  let delayValue = Number(delay.value);\n  for (let i = 0; i < setAmountValue; i++) {\n    promisesValue = i + 1;\n    createPromise(promisesValue, delayValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n        submitButton.disabled=true;\n      })\n      \n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n      \n    delayValue += stepValue;\n  }\n};\n// const blockIfPromisesAreSet=()=>{\n  \n//   submitButton.disabled=true;\n// }\nform.addEventListener('submit', promisesGenerator);\nconst reEnableButton=()=>{\n   promisesGenerator().then(()=>{\n    submitButton.disabled=false;\n   }) \n        \n    };\n\nsubmitButton.addEventListener(\"click\", reEnableButton)\n\n// submitButton.addEventListener(\"click\",blockIfPromisesAreSet)"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$setAmount","document","querySelector","$47d4ff9957288465$var$step","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$form","$47d4ff9957288465$var$submitButton","$47d4ff9957288465$var$createPromise","position","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","$47d4ff9957288465$var$promisesGenerator","event","promisesValue","preventDefault","setAmountValue","Number","value","stepValue","delayValue","i","then","delay2","$parcel$interopDefault","Notify","success","disabled","catch","delay3","failure","addEventListener"],"version":3,"file":"03-promises.86386167.js.map"}